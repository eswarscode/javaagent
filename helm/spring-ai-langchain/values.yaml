# Default values for spring-ai-langchain.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: spring-ai-langchain
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  # nodePort: 30080  # Only used if type is NodePort
  # loadBalancerIP: ""  # Only used if type is LoadBalancer
  # loadBalancerSourceRanges: []  # Only used if type is LoadBalancer

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: spring-ai-langchain.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: spring-ai-langchain-tls
  #    hosts:
  #      - spring-ai-langchain.example.com

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Spring profiles to activate
springProfiles: "kubernetes"

# Application configuration
config:
  # OpenAI configuration
  openai:
    # API key for OpenAI (base64 encoded in secret)
    apiKey: ""  # Set this value or use external secret
    model: "gpt-4"
    temperature: 0.7

  # LangChain4j configuration
  langchain4j:
    modelName: "gpt-4"
    temperature: 0.7

  # LangSmith configuration
  langsmith:
    # API key for LangSmith (base64 encoded in secret)
    apiKey: ""  # Set this value or use external secret
    projectName: "spring-ai-demo"
    endpoint: "https://api.smith.langchain.com"

  # Ollama configuration (optional)
  ollama:
    enabled: false
    baseUrl: "http://ollama:11434"
    model: "llama2"

  # Additional application configuration
  additionalConfig: {}

# Management and monitoring
management:
  health:
    showDetails: "when-authorized"

# Metrics configuration
metrics:
  prometheus:
    enabled: true

# Logging configuration
logging:
  level:
    root: "INFO"
    application: "DEBUG"
    springAi: "INFO"
    langchain4j: "INFO"

# Extra environment variables
extraEnvVars: []
# - name: CUSTOM_VAR
#   value: "custom-value"

# Extra environment variables from ConfigMaps or Secrets
extraEnvFrom: []
# - configMapRef:
#     name: my-configmap
# - secretRef:
#     name: my-secret