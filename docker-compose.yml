version: '3.8'

services:
  spring-ai-langchain:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-ai-langchain
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT:-spring-ai-demo}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT:-https://api.smith.langchain.com}
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      - ollama
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/ai/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ai-network
    restart: unless-stopped
    environment:
      - OLLAMA_ORIGINS=*
    command: serve

  # Initialize Ollama with a model
  ollama-init:
    image: ollama/ollama:latest
    container_name: ollama-init
    depends_on:
      - ollama
    networks:
      - ai-network
    volumes:
      - ollama_data:/root/.ollama
    entrypoint: >
      sh -c "
        echo 'Waiting for Ollama to be ready...'
        sleep 10
        echo 'Pulling llama2 model...'
        ollama pull llama2
        echo 'Model pulled successfully!'
      "
    restart: "no"

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for data persistence
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=spring_ai
      - POSTGRES_USER=spring_ai
      - POSTGRES_PASSWORD=spring_ai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-network
    restart: unless-stopped

volumes:
  ollama_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  ai-network:
    driver: bridge